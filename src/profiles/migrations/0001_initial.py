# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-09-03 23:49
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        ('skillsets', '0001_initial'),
        ('skills', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='user')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=50, verbose_name='last name')),
                ('title', models.CharField(blank=True, max_length=280, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('years_experience', models.IntegerField(blank=True, null=True, verbose_name='years of experience')),
            ],
            options={
                'verbose_name': 'profile',
                'verbose_name_plural': 'profiles',
                'db_table': 'profiles',
                'ordering': ('last_name',),
            },
        ),
        migrations.CreateModel(
            name='ProfileSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.Profile')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skills.Skill')),
            ],
            options={
                'verbose_name': 'profile skill',
                'verbose_name_plural': 'profile skills',
                'db_table': 'profile_skills',
            },
        ),
        migrations.CreateModel(
            name='ProfileSkillset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.Profile')),
                ('skillset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skillsets.Skillset')),
            ],
            options={
                'verbose_name': 'profile skillset',
                'verbose_name_plural': 'profile skillsets',
                'db_table': 'profile_skillsets',
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='skills',
            field=models.ManyToManyField(through='profiles.ProfileSkill', to='skills.Skill', verbose_name='skills'),
        ),
        migrations.AddField(
            model_name='profile',
            name='skillsets',
            field=models.ManyToManyField(through='profiles.ProfileSkillset', to='skillsets.Skillset', verbose_name='skillsets'),
        ),
        migrations.AlterUniqueTogether(
            name='profileskillset',
            unique_together=set([('profile', 'skillset'), ('profile', 'weight')]),
        ),
        migrations.AlterUniqueTogether(
            name='profileskill',
            unique_together=set([('profile', 'skill')]),
        ),
    ]
